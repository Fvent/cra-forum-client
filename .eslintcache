[{"C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\index.js":"1","C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\LogIn.jsx":"2","C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\Home.jsx":"3","C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\Forum.jsx":"4","C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\NotFound.jsx":"5","C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\App.jsx":"6","C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\Register.jsx":"7"},{"size":176,"mtime":1613581755055,"results":"8","hashOfConfig":"9"},{"size":2477,"mtime":1614632629843,"results":"10","hashOfConfig":"9"},{"size":233,"mtime":1612294844012,"results":"11","hashOfConfig":"9"},{"size":2912,"mtime":1614113663064,"results":"12","hashOfConfig":"9"},{"size":201,"mtime":1612296012468,"results":"13","hashOfConfig":"9"},{"size":2125,"mtime":1614546039426,"results":"14","hashOfConfig":"9"},{"size":2434,"mtime":1614547163986,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pagh0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\index.js",[],["33","34"],"C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\LogIn.jsx",["35"],"C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\Home.jsx",["36"],"import React from 'react';\r\n\r\nexport class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (<div id=\"home\">\r\n            <h1>Home</h1>\r\n        </div>);\r\n    }\r\n}","C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\Forum.jsx",["37"],"import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\n\r\nexport class Forum extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          loading : true,\r\n          foruminfo : [],\r\n          // formUserInput: '',\r\n          formCommentInput: ''\r\n        }\r\n\r\n        this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.getForumInfo = this.getForumInfo.bind(this);\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        this.getForumInfo();\r\n    }\r\n\r\n    async getForumInfo(){ \r\n        const url = 'http://localhost:1515/viewcomments';\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n      \r\n          this.setState({loading: false, foruminfo: data})\r\n          console.log(this.state.foruminfo);\r\n    }\r\n\r\n    handleCommentSubmit(event){\r\n      event.preventDefault();\r\n      // console.log(this.state.formUserInput);\r\n      // console.log(this.state.formCommentInput);\r\n\r\n      var payload = {'user': sessionStorage.getItem('alias'), 'comment': this.state.formCommentInput};\r\n        console.log(payload);\r\n        var http = new XMLHttpRequest();\r\n        var url = 'http://localhost:1515/addcomment';\r\n        http.open(\"POST\", url);\r\n        http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        http.send(JSON.stringify(payload));\r\n        http.onreadystatechange = () => {\r\n            this.getForumInfo();\r\n        }\r\n\r\n      document.getElementById('forum-form').reset();\r\n    }\r\n\r\n    handleInputChange(event){\r\n        var nam = event.target.name;\r\n        var val = event.target.value;\r\n        // console.log(nam ,'--',val);\r\n        this.setState({\r\n          [nam]: val\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (<div id=\"forum\">\r\n\r\n          <div id=\"forum-display\">\r\n          <h1>Forum</h1>\r\n           { this.state.loading ? \r\n           <h2>Loading...</h2> : \r\n          //  this.state.foruminfo.map((item) => <li key={item._id} className=\"list-group-item\"><h4>{item.user}&nbsp;&nbsp;:&nbsp;&nbsp;{item.comment}</h4></li>)}\r\n          this.state.foruminfo.map((item)=><ul className=\"list-group list-group-horizontal\"><li className=\"list-group-item\">{item.user}</li><li className=\"list-group-item\">{item.comment}</li></ul>)}\r\n          </div>\r\n            \r\n\r\n            <form id=\"forum-form\" className=\"form-group\" onSubmit={this.handleCommentSubmit}>\r\n              {/* <input type=\"text\"  className=\"form-control\" name=\"formUserInput\" id=\"userinput\" onChange={this.handleInputChange} /> */}\r\n              <textarea type=\"text\" className=\"form-control\" name=\"formCommentInput\" id=\"commentinput\" onChange={this.handleInputChange} />\r\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n\r\n        </div>);\r\n    }\r\n}","C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\NotFound.jsx",[],"C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\App.jsx",[],"C:\\Users\\frven\\Desktop\\test\\node-tests\\cra-forum-client\\src\\components\\Register.jsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":6,"column":7,"nodeType":"44","messageId":"45","endLine":6,"endColumn":10},{"ruleId":"46","severity":1,"message":"47","line":4,"column":5,"nodeType":"48","messageId":"49","endLine":6,"endColumn":6},{"ruleId":"42","severity":1,"message":"50","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":14},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'NVR' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]